{"ast":null,"code":"import { getToken } from '../utils/storage';\n\n// 封裝API請求方法\nconst apiRequest = async (url, method = 'GET', data = null) => {\n  const headers = {\n    'Content-Type': 'application/json'\n  };\n\n  // 加入認證令牌\n  const token = getToken();\n  if (token) {\n    headers['Authorization'] = `Bearer ${token}`;\n  }\n  const config = {\n    method,\n    headers,\n    credentials: 'include'\n  };\n  if (data) {\n    config.body = JSON.stringify(data);\n  }\n  const response = await fetch(url, config);\n  if (!response.ok) {\n    const errorData = await response.json().catch(() => ({\n      message: `HTTP error! status: ${response.status}`\n    }));\n    throw new Error(errorData.message || 'API請求失敗');\n  }\n  return response.json();\n};\n\n// 獲取所有留言\nexport const getComments = async () => {\n  return apiRequest('/api/comments');\n};\n\n// 創建新留言\nexport const createComment = async content => {\n  return apiRequest('/api/comments', 'POST', {\n    content\n  });\n};\n\n// 回覆留言\nexport const replyComment = async (parentId, content) => {\n  return apiRequest(`/api/comments/${parentId}/reply`, 'POST', {\n    content\n  });\n};\n\n// 給留言點讚\nexport const likeComment = async commentId => {\n  return apiRequest(`/api/comments/${commentId}/like`, 'POST');\n};\n\n// 刪除留言\nexport const deleteComment = async commentId => {\n  return apiRequest(`/api/comments/${commentId}`, 'DELETE');\n};","map":{"version":3,"names":["getToken","apiRequest","url","method","data","headers","token","config","credentials","body","JSON","stringify","response","fetch","ok","errorData","json","catch","message","status","Error","getComments","createComment","content","replyComment","parentId","likeComment","commentId","deleteComment"],"sources":["/Users/lidiannan/Documents/GitHub/comment-system/frontend/src/services/comment.js"],"sourcesContent":["import { getToken } from '../utils/storage'\n\n// 封裝API請求方法\nconst apiRequest = async (url, method = 'GET', data = null) => {\n  const headers = {\n    'Content-Type': 'application/json'\n  }\n\n  // 加入認證令牌\n  const token = getToken()\n  if (token) {\n    headers['Authorization'] = `Bearer ${token}`\n  }\n\n  const config = {\n    method,\n    headers,\n    credentials: 'include'\n  }\n\n  if (data) {\n    config.body = JSON.stringify(data)\n  }\n\n  const response = await fetch(url, config)\n  \n  if (!response.ok) {\n    const errorData = await response.json().catch(() => ({\n      message: `HTTP error! status: ${response.status}`\n    }))\n    throw new Error(errorData.message || 'API請求失敗')\n  }\n\n  return response.json()\n}\n\n// 獲取所有留言\nexport const getComments = async () => {\n  return apiRequest('/api/comments')\n}\n\n// 創建新留言\nexport const createComment = async (content) => {\n  return apiRequest('/api/comments', 'POST', { content })\n}\n\n// 回覆留言\nexport const replyComment = async (parentId, content) => {\n  return apiRequest(`/api/comments/${parentId}/reply`, 'POST', { content })\n}\n\n// 給留言點讚\nexport const likeComment = async (commentId) => {\n  return apiRequest(`/api/comments/${commentId}/like`, 'POST')\n}\n\n// 刪除留言\nexport const deleteComment = async (commentId) => {\n  return apiRequest(`/api/comments/${commentId}`, 'DELETE')\n}"],"mappings":"AAAA,SAASA,QAAQ,QAAQ,kBAAkB;;AAE3C;AACA,MAAMC,UAAU,GAAG,MAAAA,CAAOC,GAAG,EAAEC,MAAM,GAAG,KAAK,EAAEC,IAAI,GAAG,IAAI,KAAK;EAC7D,MAAMC,OAAO,GAAG;IACd,cAAc,EAAE;EAClB,CAAC;;EAED;EACA,MAAMC,KAAK,GAAGN,QAAQ,CAAC,CAAC;EACxB,IAAIM,KAAK,EAAE;IACTD,OAAO,CAAC,eAAe,CAAC,GAAG,UAAUC,KAAK,EAAE;EAC9C;EAEA,MAAMC,MAAM,GAAG;IACbJ,MAAM;IACNE,OAAO;IACPG,WAAW,EAAE;EACf,CAAC;EAED,IAAIJ,IAAI,EAAE;IACRG,MAAM,CAACE,IAAI,GAAGC,IAAI,CAACC,SAAS,CAACP,IAAI,CAAC;EACpC;EAEA,MAAMQ,QAAQ,GAAG,MAAMC,KAAK,CAACX,GAAG,EAAEK,MAAM,CAAC;EAEzC,IAAI,CAACK,QAAQ,CAACE,EAAE,EAAE;IAChB,MAAMC,SAAS,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC,CAACC,KAAK,CAAC,OAAO;MACnDC,OAAO,EAAE,uBAAuBN,QAAQ,CAACO,MAAM;IACjD,CAAC,CAAC,CAAC;IACH,MAAM,IAAIC,KAAK,CAACL,SAAS,CAACG,OAAO,IAAI,SAAS,CAAC;EACjD;EAEA,OAAON,QAAQ,CAACI,IAAI,CAAC,CAAC;AACxB,CAAC;;AAED;AACA,OAAO,MAAMK,WAAW,GAAG,MAAAA,CAAA,KAAY;EACrC,OAAOpB,UAAU,CAAC,eAAe,CAAC;AACpC,CAAC;;AAED;AACA,OAAO,MAAMqB,aAAa,GAAG,MAAOC,OAAO,IAAK;EAC9C,OAAOtB,UAAU,CAAC,eAAe,EAAE,MAAM,EAAE;IAAEsB;EAAQ,CAAC,CAAC;AACzD,CAAC;;AAED;AACA,OAAO,MAAMC,YAAY,GAAG,MAAAA,CAAOC,QAAQ,EAAEF,OAAO,KAAK;EACvD,OAAOtB,UAAU,CAAC,iBAAiBwB,QAAQ,QAAQ,EAAE,MAAM,EAAE;IAAEF;EAAQ,CAAC,CAAC;AAC3E,CAAC;;AAED;AACA,OAAO,MAAMG,WAAW,GAAG,MAAOC,SAAS,IAAK;EAC9C,OAAO1B,UAAU,CAAC,iBAAiB0B,SAAS,OAAO,EAAE,MAAM,CAAC;AAC9D,CAAC;;AAED;AACA,OAAO,MAAMC,aAAa,GAAG,MAAOD,SAAS,IAAK;EAChD,OAAO1B,UAAU,CAAC,iBAAiB0B,SAAS,EAAE,EAAE,QAAQ,CAAC;AAC3D,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}