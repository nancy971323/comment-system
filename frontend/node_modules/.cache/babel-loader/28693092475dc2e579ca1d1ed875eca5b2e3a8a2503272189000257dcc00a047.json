{"ast":null,"code":"export default {\n  name: 'RegisterForm',\n  data() {\n    return {\n      form: {\n        username: '',\n        email: '',\n        password: '',\n        confirmPassword: ''\n      },\n      errors: {\n        username: '',\n        email: '',\n        password: '',\n        confirmPassword: ''\n      },\n      isLoading: false\n    };\n  },\n  methods: {\n    validateForm() {\n      let isValid = true;\n      this.errors = {\n        username: '',\n        email: '',\n        password: '',\n        confirmPassword: ''\n      };\n\n      // 驗證用戶名\n      if (!this.form.username.trim()) {\n        this.errors.username = '請輸入用戶名';\n        isValid = false;\n      } else if (this.form.username.length < 3) {\n        this.errors.username = '用戶名至少需要3個字符';\n        isValid = false;\n      }\n\n      // 驗證電子郵件\n      if (!this.form.email.trim()) {\n        this.errors.email = '請輸入電子郵件';\n        isValid = false;\n      } else if (!this.isValidEmail(this.form.email)) {\n        this.errors.email = '請輸入有效的電子郵件地址';\n        isValid = false;\n      }\n\n      // 驗證密碼\n      if (!this.form.password) {\n        this.errors.password = '請輸入密碼';\n        isValid = false;\n      } else if (this.form.password.length < 6) {\n        this.errors.password = '密碼至少需要6個字符';\n        isValid = false;\n      }\n\n      // 驗證確認密碼\n      if (this.form.password !== this.form.confirmPassword) {\n        this.errors.confirmPassword = '兩次輸入的密碼不一致';\n        isValid = false;\n      }\n      return isValid;\n    },\n    isValidEmail(email) {\n      const re = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n      return re.test(email);\n    },\n    async handleSubmit() {\n      if (!this.validateForm()) {\n        return;\n      }\n      this.isLoading = true;\n      try {\n        await this.$emit('register', {\n          username: this.form.username.trim(),\n          email: this.form.email.trim(),\n          password: this.form.password\n        });\n\n        // 清空表單\n        this.form = {\n          username: '',\n          email: '',\n          password: '',\n          confirmPassword: ''\n        };\n      } catch (error) {\n        this.$emit('register-error', error.message || '註冊失敗');\n      } finally {\n        this.isLoading = false;\n      }\n    }\n  }\n};","map":{"version":3,"names":["name","data","form","username","email","password","confirmPassword","errors","isLoading","methods","validateForm","isValid","trim","length","isValidEmail","re","test","handleSubmit","$emit","error","message"],"sources":["/Users/lidiannan/Documents/GitHub/comment-system/frontend/src/components/Auth/RegisterForm.vue"],"sourcesContent":["<template>\n    <form @submit.prevent=\"handleSubmit\" class=\"register-form\">\n      <div class=\"form-group\">\n        <label for=\"username\">用戶名</label>\n        <input \n          type=\"text\" \n          id=\"username\" \n          v-model=\"form.username\" \n          required \n          :class=\"{ 'invalid': errors.username }\"\n        />\n        <div v-if=\"errors.username\" class=\"error-message\">{{ errors.username }}</div>\n      </div>\n  \n      <div class=\"form-group\">\n        <label for=\"email\">電子郵件</label>\n        <input \n          type=\"email\" \n          id=\"email\" \n          v-model=\"form.email\" \n          required \n          :class=\"{ 'invalid': errors.email }\"\n        />\n        <div v-if=\"errors.email\" class=\"error-message\">{{ errors.email }}</div>\n      </div>\n      \n      <div class=\"form-group\">\n        <label for=\"password\">密碼</label>\n        <input \n          type=\"password\" \n          id=\"password\" \n          v-model=\"form.password\" \n          required \n          :class=\"{ 'invalid': errors.password }\"\n        />\n        <div v-if=\"errors.password\" class=\"error-message\">{{ errors.password }}</div>\n      </div>\n  \n      <div class=\"form-group\">\n        <label for=\"confirmPassword\">確認密碼</label>\n        <input \n          type=\"password\" \n          id=\"confirmPassword\" \n          v-model=\"form.confirmPassword\" \n          required \n          :class=\"{ 'invalid': errors.confirmPassword }\"\n        />\n        <div v-if=\"errors.confirmPassword\" class=\"error-message\">{{ errors.confirmPassword }}</div>\n      </div>\n  \n      <button type=\"submit\" class=\"submit-button\" :disabled=\"isLoading\">\n        {{ isLoading ? '註冊中...' : '註冊' }}\n      </button>\n    </form>\n  </template>\n  \n  <script>\n  export default {\n    name: 'RegisterForm',\n    data() {\n      return {\n        form: {\n          username: '',\n          email: '',\n          password: '',\n          confirmPassword: ''\n        },\n        errors: {\n          username: '',\n          email: '',\n          password: '',\n          confirmPassword: ''\n        },\n        isLoading: false\n      }\n    },\n    methods: {\n      validateForm() {\n        let isValid = true\n        this.errors = {\n          username: '',\n          email: '',\n          password: '',\n          confirmPassword: ''\n        }\n  \n        // 驗證用戶名\n        if (!this.form.username.trim()) {\n          this.errors.username = '請輸入用戶名'\n          isValid = false\n        } else if (this.form.username.length < 3) {\n          this.errors.username = '用戶名至少需要3個字符'\n          isValid = false\n        }\n  \n        // 驗證電子郵件\n        if (!this.form.email.trim()) {\n          this.errors.email = '請輸入電子郵件'\n          isValid = false\n        } else if (!this.isValidEmail(this.form.email)) {\n          this.errors.email = '請輸入有效的電子郵件地址'\n          isValid = false\n        }\n  \n        // 驗證密碼\n        if (!this.form.password) {\n          this.errors.password = '請輸入密碼'\n          isValid = false\n        } else if (this.form.password.length < 6) {\n          this.errors.password = '密碼至少需要6個字符'\n          isValid = false\n        }\n  \n        // 驗證確認密碼\n        if (this.form.password !== this.form.confirmPassword) {\n          this.errors.confirmPassword = '兩次輸入的密碼不一致'\n          isValid = false\n        }\n  \n        return isValid\n      },\n  \n      isValidEmail(email) {\n        const re = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/\n        return re.test(email)\n      },\n      \n      async handleSubmit() {\n        if (!this.validateForm()) {\n          return\n        }\n  \n        this.isLoading = true\n        \n        try {\n          await this.$emit('register', {\n            username: this.form.username.trim(),\n            email: this.form.email.trim(),\n            password: this.form.password\n          })\n          \n          // 清空表單\n          this.form = {\n            username: '',\n            email: '',\n            password: '',\n            confirmPassword: ''\n          }\n        } catch (error) {\n          this.$emit('register-error', error.message || '註冊失敗')\n        } finally {\n          this.isLoading = false\n        }\n      }\n    }\n  }\n  </script>\n  \n  <style scoped>\n  .register-form {\n    width: 100%;\n  }\n  \n  .form-group {\n    margin-bottom: 15px;\n  }\n  \n  label {\n    display: block;\n    margin-bottom: 5px;\n    font-weight: bold;\n  }\n  \n  input {\n    width: 100%;\n    padding: 10px;\n    border: 1px solid #ddd;\n    border-radius: 4px;\n    font-size: 16px;\n  }\n  \n  input.invalid {\n    border-color: #ff6b6b;\n  }\n  \n  .error-message {\n    color: #ff6b6b;\n    font-size: 14px;\n    margin-top: 5px;\n  }\n  \n  .submit-button {\n    width: 100%;\n    padding: 12px;\n    background-color: #4CAF50;\n    color: white;\n    border: none;\n    border-radius: 4px;\n    font-size: 16px;\n    cursor: pointer;\n    margin-top: 10px;\n  }\n  \n  .submit-button:hover {\n    background-color: #45a049;\n  }\n  \n  .submit-button:disabled {\n    background-color: #cccccc;\n    cursor: not-allowed;\n  }\n  </style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}