{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, resolveComponent as _resolveComponent, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"comment-list\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"empty-state\"\n};\nconst _hoisted_3 = {\n  key: 1\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_CommentItem = _resolveComponent(\"CommentItem\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[0] || (_cache[0] = _createElementVNode(\"h3\", null, \"留言列表\", -1 /* HOISTED */)), $props.comments.length === 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, \" 目前沒有留言，成為第一個發表留言的人！ \")) : (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.topLevelComments, comment => {\n    return _openBlock(), _createBlock(_component_CommentItem, {\n      key: comment.id,\n      comment: comment,\n      currentUserId: $props.currentUserId,\n      onAction: $options.handleCommentAction\n    }, null, 8 /* PROPS */, [\"comment\", \"currentUserId\", \"onAction\"]);\n  }), 128 /* KEYED_FRAGMENT */))]))]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","$props","comments","length","_hoisted_2","_hoisted_3","_Fragment","_renderList","$options","topLevelComments","comment","_createBlock","_component_CommentItem","id","currentUserId","onAction","handleCommentAction"],"sources":["/Users/lidiannan/Documents/GitHub/comment-system/frontend/src/components/Comment/CommentList.vue"],"sourcesContent":["<template>\n    <div class=\"comment-list\">\n      <h3>留言列表</h3>\n      \n      <div v-if=\"comments.length === 0\" class=\"empty-state\">\n        目前沒有留言，成為第一個發表留言的人！\n      </div>\n      \n      <div v-else>\n        <CommentItem \n          v-for=\"comment in topLevelComments\" \n          :key=\"comment.id\"\n          :comment=\"comment\"\n          :currentUserId=\"currentUserId\"\n          @action=\"handleCommentAction\"\n        />\n      </div>\n    </div>\n  </template>\n  \n  <script>\n  import CommentItem from './CommentItem.vue'\n  \n  export default {\n    name: 'CommentList',\n    components: {\n      CommentItem\n    },\n    props: {\n      comments: {\n        type: Array,\n        required: true\n      },\n      currentUserId: {\n        type: Number,\n        required: true\n      }\n    },\n    computed: {\n      // 篩選出頂層留言（非回覆）\n      topLevelComments() {\n        return this.comments.filter(comment => !comment.parentId)\n      }\n    },\n    methods: {\n      handleCommentAction(action, commentId, content) {\n        this.$emit('comment-action', action, commentId, content)\n      }\n    }\n  }\n  </script>\n  \n  <style scoped>\n  .comment-list {\n    margin-top: 30px;\n  }\n  \n  h3 {\n    margin-top: 0;\n    margin-bottom: 20px;\n    color: #333;\n  }\n  \n  .empty-state {\n    padding: 30px;\n    text-align: center;\n    background-color: #f9f9f9;\n    border: 1px dashed #ddd;\n    border-radius: 8px;\n    color: #777;\n  }\n  </style>"],"mappings":";;EACSA,KAAK,EAAC;AAAc;;EAD7BC,GAAA;EAIwCD,KAAK,EAAC;;;EAJ9CC,GAAA;AAAA;;;uBACIC,mBAAA,CAgBM,OAhBNC,UAgBM,G,0BAfJC,mBAAA,CAAa,YAAT,MAAI,sBAEGC,MAAA,CAAAC,QAAQ,CAACC,MAAM,U,cAA1BL,mBAAA,CAEM,OAFNM,UAEM,EAFgD,uBAEtD,M,cAEAN,mBAAA,CAQM,OAhBZO,UAAA,I,kBASQP,mBAAA,CAMEQ,SAAA,QAfVC,WAAA,CAU4BC,QAAA,CAAAC,gBAAgB,EAA3BC,OAAO;yBADhBC,YAAA,CAMEC,sBAAA;MAJCf,GAAG,EAAEa,OAAO,CAACG,EAAE;MACfH,OAAO,EAAEA,OAAO;MAChBI,aAAa,EAAEb,MAAA,CAAAa,aAAa;MAC5BC,QAAM,EAAEP,QAAA,CAAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}