{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, normalizeClass as _normalizeClass, withDirectives as _withDirectives, toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, withModifiers as _withModifiers } from \"vue\";\nconst _hoisted_1 = {\n  class: \"comment-form-container\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"error-message\"\n};\nconst _hoisted_3 = [\"disabled\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[2] || (_cache[2] = _createElementVNode(\"h3\", null, \"發表留言\", -1 /* HOISTED */)), _createElementVNode(\"form\", {\n    onSubmit: _cache[1] || (_cache[1] = _withModifiers((...args) => $options.submitComment && $options.submitComment(...args), [\"prevent\"])),\n    class: \"comment-form\"\n  }, [_withDirectives(_createElementVNode(\"textarea\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.content = $event),\n    placeholder: \"分享您的想法...\",\n    class: _normalizeClass({\n      'invalid': $data.errorMessage\n    }),\n    rows: \"4\"\n  }, null, 2 /* CLASS */), [[_vModelText, $data.content]]), $data.errorMessage ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, _toDisplayString($data.errorMessage), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"button\", {\n    type: \"submit\",\n    disabled: $data.isSubmitting\n  }, _toDisplayString($data.isSubmitting ? '發送中...' : '發送留言'), 9 /* TEXT, PROPS */, _hoisted_3)], 32 /* NEED_HYDRATION */)]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","onSubmit","_cache","_withModifiers","args","$options","submitComment","$event","$data","content","placeholder","_normalizeClass","errorMessage","rows","_hoisted_2","_toDisplayString","_createCommentVNode","type","disabled","isSubmitting","_hoisted_3"],"sources":["/Users/lidiannan/Documents/GitHub/comment-system/frontend/src/components/Comment/CommentForm.vue"],"sourcesContent":["<template>\n    <div class=\"comment-form-container\">\n      <h3>發表留言</h3>\n      <form @submit.prevent=\"submitComment\" class=\"comment-form\">\n        <textarea\n          v-model=\"content\"\n          placeholder=\"分享您的想法...\"\n          :class=\"{ 'invalid': errorMessage }\"\n          rows=\"4\"\n        ></textarea>\n        <div v-if=\"errorMessage\" class=\"error-message\">{{ errorMessage }}</div>\n        <button type=\"submit\" :disabled=\"isSubmitting\">\n          {{ isSubmitting ? '發送中...' : '發送留言' }}\n        </button>\n      </form>\n    </div>\n  </template>\n  \n  <script>\n  import { createComment } from '../../services/comment'\n  \n  export default {\n    name: 'CommentForm',\n    data() {\n      return {\n        content: '',\n        isSubmitting: false,\n        errorMessage: ''\n      }\n    },\n    methods: {\n      validateComment() {\n        this.errorMessage = ''\n        \n        if (!this.content.trim()) {\n          this.errorMessage = '留言內容不能為空'\n          return false\n        }\n        \n        if (this.content.length > 1000) {\n          this.errorMessage = '留言不能超過1000字'\n          return false\n        }\n        \n        return true\n      },\n      \n      async submitComment() {\n        if (!this.validateComment()) {\n          return\n        }\n        \n        this.isSubmitting = true\n        \n        try {\n          await createComment(this.content.trim())\n          this.content = '' // 清空輸入框\n          this.$emit('comment-added')\n        } catch (error) {\n          console.error('Failed to submit comment:', error)\n          this.errorMessage = error.message || '發送留言失敗，請稍後再試'\n        } finally {\n          this.isSubmitting = false\n        }\n      }\n    }\n  }\n  </script>\n  \n  <style scoped>\n  .comment-form-container {\n    margin-bottom: 30px;\n  }\n  \n  h3 {\n    margin-top: 0;\n    margin-bottom: 15px;\n    color: #333;\n  }\n  \n  .comment-form {\n    display: flex;\n    flex-direction: column;\n  }\n  \n  textarea {\n    width: 100%;\n    padding: 12px;\n    border: 1px solid #ddd;\n    border-radius: 4px;\n    font-size: 16px;\n    resize: vertical;\n    margin-bottom: 10px;\n    font-family: inherit;\n  }\n  \n  textarea.invalid {\n    border-color: #ff6b6b;\n  }\n  \n  .error-message {\n    color: #ff6b6b;\n    font-size: 14px;\n    margin-bottom: 10px;\n  }\n  \n  button {\n    align-self: flex-end;\n    padding: 10px 20px;\n    background-color: #4CAF50;\n    color: white;\n    border: none;\n    border-radius: 4px;\n    font-size: 15px;\n    cursor: pointer;\n  }\n  \n  button:hover {\n    background-color: #45a049;\n  }\n  \n  button:disabled {\n    background-color: #cccccc;\n    cursor: not-allowed;\n  }\n  </style>"],"mappings":";;EACSA,KAAK,EAAC;AAAwB;;EADvCC,GAAA;EAUiCD,KAAK,EAAC;;mBAVvC;;uBACIE,mBAAA,CAcM,OAdNC,UAcM,G,0BAbJC,mBAAA,CAAa,YAAT,MAAI,sBACRA,mBAAA,CAWO;IAXAC,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAHnBC,cAAA,KAAAC,IAAA,KAG6BC,QAAA,CAAAC,aAAA,IAAAD,QAAA,CAAAC,aAAA,IAAAF,IAAA,CAAa;IAAER,KAAK,EAAC;sBAC1CI,mBAAA,CAKY;IATpB,uBAAAE,MAAA,QAAAA,MAAA,MAAAK,MAAA,IAKmBC,KAAA,CAAAC,OAAO,GAAAF,MAAA;IAChBG,WAAW,EAAC,WAAW;IACtBd,KAAK,EAPhBe,eAAA;MAAA,WAO+BH,KAAA,CAAAI;IAAY;IACjCC,IAAI,EAAC;0CAHIL,KAAA,CAAAC,OAAO,E,GAKPD,KAAA,CAAAI,YAAY,I,cAAvBd,mBAAA,CAAuE,OAAvEgB,UAAuE,EAAAC,gBAAA,CAArBP,KAAA,CAAAI,YAAY,oBAVtEI,mBAAA,gBAWQhB,mBAAA,CAES;IAFDiB,IAAI,EAAC,QAAQ;IAAEC,QAAQ,EAAEV,KAAA,CAAAW;sBAC5BX,KAAA,CAAAW,YAAY,4CAZzBC,UAAA,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}